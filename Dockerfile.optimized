# Dockerfile optimizado para el sistema educativo
FROM python:3.11-slim as builder

# Instalar dependencias del sistema para compilación
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar requirements y instalar dependencias
COPY requirements*.txt ./
RUN pip install --no-cache-dir --user -r requirements.txt

# Stage de producción
FROM python:3.11-slim

# Crear usuario no-root
RUN useradd --create-home --shell /bin/bash app

# Instalar dependencias runtime mínimas
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar dependencias Python del builder
COPY --from=builder /root/.local /home/app/.local

# Crear directorios necesarios
RUN mkdir -p /app/data/uploads /app/data/temp /app/logs && \
    chown -R app:app /app

# Copiar código de la aplicación
COPY . .
RUN chown -R app:app /app

# Cambiar a usuario no-root
USER app

# Configurar environment
ENV PATH=/home/app/.local/bin:$PATH
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Exponer puerto
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Comando de inicio - usando main_simple
CMD ["python", "-m", "uvicorn", "src.main_simple:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
