# Azure Container Apps Deployment Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: educational-app-config
  namespace: default
data:
  ENVIRONMENT: "production"
  WORKERS: "4"
  UVICORN_WORKERS: "4"
  UVICORN_HOST: "0.0.0.0"
  UVICORN_PORT: "8000"
  UVICORN_RELOAD: "false"

---
apiVersion: v1
kind: Secret
metadata:
  name: educational-app-secrets
  namespace: default
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  POSTGRES_PASSWORD: c2VjdXJlX3Bhc3N3b3JkXzIwMjQ=  # secure_password_2024
  POSTGRES_REPLICA_PASSWORD: cmVwbGljYV9wYXNzd29yZF8yMDI0  # replica_password_2024
  REDIS_PASSWORD: cmVkaXNfcGFzc3dvcmRfMjAyNA==  # redis_password_2024
  RABBITMQ_PASSWORD: cmFiYml0bXFfcGFzc3dvcmRfMjAyNA==  # rabbitmq_password_2024
  GROK_API_KEY: eW91ci1hcGkta2V5  # your-api-key
  GROQ_API_KEY: eW91ci1ncm9xLWFwaS1rZXk=  # your-groq-api-key

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: educational-system-api
  namespace: default
  labels:
    app: educational-system
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: educational-system
      component: api
  template:
    metadata:
      labels:
        app: educational-system
        component: api
    spec:
      containers:
      - name: api
        image: educational.azurecr.io/educational-app:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql://admin:$(POSTGRES_PASSWORD)@postgres-service:5432/educational_system"
        - name: REDIS_URL
          value: "redis://default:$(REDIS_PASSWORD)@redis-service:6379/0"
        - name: RABBITMQ_URL
          value: "amqp://admin:$(RABBITMQ_PASSWORD)@rabbitmq-service:5672/"
        envFrom:
        - configMapRef:
            name: educational-app-config
        - secretRef:
            name: educational-app-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: default
spec:
  selector:
    app: educational-system
    component: api
  ports:
  - port: 80
    targetPort: 8000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-primary
  namespace: default
  labels:
    app: educational-system
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: educational-system
      component: postgres-primary
  template:
    metadata:
      labels:
        app: educational-system
        component: postgres-primary
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "educational_system"
        - name: POSTGRES_USER
          value: "admin"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: educational-app-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_REPLICA_USER
          value: "replica"
        - name: POSTGRES_REPLICA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: educational-app-secrets
              key: POSTGRES_REPLICA_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
spec:
  selector:
    app: educational-system
    component: postgres-primary
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: default
  labels:
    app: educational-system
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: educational-system
      component: redis-master
  template:
    metadata:
      labels:
        app: educational-system
        component: redis-master
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: educational-app-secrets
              key: REDIS_PASSWORD
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --requirepass
        - "$(REDIS_PASSWORD)"
        - --maxmemory
        - "512mb"
        - --maxmemory-policy
        - allkeys-lru
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: default
spec:
  selector:
    app: educational-system
    component: redis-master
  ports:
  - port: 6379
    targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: default
  labels:
    app: educational-system
    component: message-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: educational-system
      component: rabbitmq
  template:
    metadata:
      labels:
        app: educational-system
        component: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "admin"
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: educational-app-secrets
              key: RABBITMQ_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: default
spec:
  selector:
    app: educational-system
    component: rabbitmq
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: educational-system-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: educational-system-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80